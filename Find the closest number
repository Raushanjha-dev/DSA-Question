Given a sorted array arr[] of positive integers. The task is to find the closest value in the array to the given number k. The array may contain duplicate values.
Note: If the difference with k is the same for two values in the array return the greater value.

//code

int findClosest(vector<int>& arr, int k) {
       int n = arr.size();
    int low = 0, high = n - 1;

    
    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == k) 
            return arr[mid];
        else if (arr[mid] < k) 
            low = mid + 1;   
        else 
            high = mid - 1;  
    }

   
    int left  = (high >= 0) ? arr[high] : INT_MIN;
    int right = (low < n) ? arr[low] : INT_MAX;

    
    if (abs(left - k) == abs(right - k)) {
        return max(left, right); 
    }
    else if (abs(left - k) < abs(right - k)) {
        return left;
    } 
    else {
        return right;
    }
        
        
    }
